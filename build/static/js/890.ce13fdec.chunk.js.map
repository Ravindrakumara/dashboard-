{"version":3,"file":"static/js/890.ce13fdec.chunk.js","mappings":"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","sources":["views/base/formapp/surveyForm.jsx"],"sourcesContent":["/* eslint-disable */\nimport React, { useEffect, useState} from \"react\";\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CForm,\n    CFormCheck,\n    CFormInput,\n    CFormLabel,\n    CFormTextarea,\n    CRow,CToast,CToastHeader,CToastBody\n  } from '@coreui/react'\n  import apiService from 'src/service/apiService'\n// import { useRef } from \"react\";\nfunction formS() {\n  const [uniqId,setUniqId]  = useState(0)\n  const [question,setQuestion]  = useState([])\n  const [questionData,setQuestionData]  = useState([])\n  const [geoset,setGeoset] = useState(false)\n  const [q1,setQ1] = useState(\"\")\n  const [q2,setQ2] = useState(\"\")\n  const [q3,setQ3] = useState(\"\")\n  const [q4,setQ4] = useState(\"\")\n  const [q5,setQ5] = useState(\"\")\n  const [q6,setQ6] = useState(\"\")\n  const [form,setForm]  = useState({fullname:null,\n                                    phone:null,\n                                    email:null,\n                                    address:null,\n                                    q1:null,\n                                    q2:null,\n                                    q3:null,\n                                    q4:null,\n                                    q5:null,\n                                    accuracy:null,\n                                    altitude:null,\n                                    altitudeAccuracy:null,\n                                    heading:null,\n                                    latitude:null,\n                                    longitude:null,\n                                    acceptsms:null,\n                                    acceptemail:null})\n  useEffect(()=>{\n    serveyQuestionList()\n    spiltway()\n  },[])\n\n  const spiltway = async() =>{\n    const queryString = window.location\n    const urlval = queryString.pathname\n    let str = urlval.slice(16,35) \n    let id = str.replace(\"/\",\"\")\n    let repl = id.replace(\"/\",\"\")\n    let a = parseInt(repl)\n\n    if( isNaN(a) === false){\n       const data = await apiService.alterformSurvey(a)\n       let i = data.data\n       setQuestionData(questionData.push(i))\n       alter()\n       setUniqId(a)\n    }else{\n\n    }\n  } \n  // async alterformSurvey\n\n  const serveyQuestionList = async()=>{\n    const queData = await apiService.getAllforquestions()\n    const x = queData.data\n    const q1 = x.filter((item) => item.place == 1);\n    const q2 = x.filter((item) => item.place == 2);\n    const q3 = x.filter((item) => item.place == 3);\n    const q4 = x.filter((item) => item.place == 4);\n    const q5 = x.filter((item) => item.place == 5);\n    const q6 = x.filter((item) => item.place == 6);\n    setQ1(q1[0].question)\n    setQ2(q2[0].question)\n    setQ3(q3[0].question)\n    setQ4(q4[0].question)\n    setQ5(q5[0].question)\n    setQ6(q6[0].question)\n  }\n//\n \n  const alter = ()=>{\n    form.fullname = questionData[0].fullname\n    form.phone = questionData[0].phone\n    form.email= questionData[0].email\n    form.address= questionData[0].address\n    form.q1= questionData[0].q1\n    form.q2= questionData[0].q2\n    form.q3= questionData[0].q3\n    form.q4= questionData[0].q4\n    form.q5= questionData[0].q5\n    form.accuracy= questionData[0].accuracy\n    form.altitude= questionData[0].altitude\n    form.altitudeAccuracy= questionData[0].altitudeAccuracy\n    form.heading= questionData[0].heading\n    form.latitude= questionData[0].latitude\n    form.longitude= questionData[0].longitude\n    form.acceptsms= questionData[0].acceptsms\n    form.acceptemail= questionData[0].acceptemail\n    form.modifyDate = questionData[0].modifyDate\n    form.createDate= questionData[0].createDate\n    form.softdeleteDate= questionData[0].softdeleteDate\n    form.createUser= questionData[0].createUser\n    form.modifyUser= \"ravtindra\"\n    form.softdeleteUser= questionData[0].softdeleteUser\n    form.isdelete= questionData[0].isdelete\n  }\n  const instance = () =>{\n    let i =0;\n    if(i < uniqId){\n      alterForm()\n    }else{\n      createForm()\n    }\n    \n  }\n  const alterForm = async()=>{\n    let id = uniqId\n    const x = await apiService.alterSurvey(form,id)\n    if(x.status === 200){\n      // return(\n        // <CToast>\n        //   <CToastHeader closeButton>\n        //     <svg\n        //       className=\"rounded me-2\"\n        //       width=\"20\"\n        //       height=\"20\"\n        //       xmlns=\"http://www.w3.org/2000/svg\"\n        //       preserveAspectRatio=\"xMidYMid slice\"\n        //       focusable=\"true\"\n        //       role=\"img\"\n        //     >\n        //       <rect width=\"100%\" height=\"100%\" fill=\"#007aff\"></rect>\n        //     </svg>\n        //     <strong className=\"me-auto\">CoreUI for React.js</strong>\n        //     <small>7 min ago</small>\n        //   </CToastHeader>\n        //   <CToastBody>Successful Update is done!</CToastBody>\n        // </CToast>\n      // )\n    }else{\n      alert(\"Error\")\n    }\n  }\n\n \n  const createForm = async()=>{\n  if(navigator.geolocation) {\n    navigator.geolocation.watchPosition(function(a) { \n    form.accuracy = a.coords.accuracy;\n    form.altitude = (a.coords.altitude ?? \"null\");\n    form.altitudeAccuracy = (a.coords.altitudeAccuracy ?? \"null\");\n    form.heading = (a.coords.heading ?? \"null\");\n    form.latitude = a.coords.latitude;\n    form.longitude = a.coords.longitude;\n  })\n  } else {\n    alert(\"Hello! I am an alert box!!\");\n  }\n  // console.log(geoset,\"gttt\")\n  positionv()\n}\n  // ============\n  const positionv =(a)=>{ \n    form.createUser =\"ravindra\"\n    const x = apiService.newinstanceSurvey(form)\n    console.log(x,'KO')\n  }\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>One minute for Successful life</strong>\n          </CCardHeader>\n          <CCardBody>\n              <CForm>\n                <CRow>\n                    <CCol>\n                    <CFormLabel htmlFor=\"exampleFormControlInput1\">Full name</CFormLabel>\n                    <CFormInput  className=\"text-primary\"\n                        type=\"text\"\n                        value={form.fullname}\n                        onChange={(e)=>setForm((x)=>({...x,fullname:e.target.value}))}\n                        size=\"sm\"\n                    />\n                    </CCol>\n                </CRow>\n\n                <CRow>\n                    <CCol>\n                    <CFormLabel htmlFor=\"exampleFormControlInput1\">Mobile/Phone</CFormLabel>\n                    <CFormInput className=\"text-primary\"\n                        type=\"text\"\n                        value={form.phone}\n                        onChange={(e)=>setForm((x)=>({...x,phone:e.target.value}))}\n                        size=\"sm\"\n                    />\n                    </CCol>\n                </CRow>\n                <CRow>\n                    <CCol>\n                    <CFormLabel htmlFor=\"exampleFormControlInput1\">Email address</CFormLabel>\n                    <CFormInput className=\"text-primary\"\n                        type=\"email\"\n                        id=\"exampleFormControlInput1\"\n                        value={form.email}\n                        onChange={(e)=>setForm((x)=>({...x,email:e.target.value}))}\n                        // onChange={(e)=>{setForm(e.target.value)}}\n                        size=\"sm\"\n                    />\n                    </CCol>\n                </CRow>\n                <CRow>\n                    <CCol>\n                    <CFormLabel htmlFor=\"exampleFormControlInput1\">Address</CFormLabel>\n                    <CFormTextarea  value={form.address} className=\"text-primary\"\n                        // onChange={(e)=>{setForm(e.target.value)}} \n                        onChange={(e)=>setForm((x)=>({...x,address:e.target.value}))}\n                        id=\"exampleFormControlTextarea1\" size=\"sm\" rows=\"3\"></CFormTextarea>\n                    </CCol>\n                </CRow>\n                <CRow>\n                    <CCol>\n                    <CFormLabel htmlFor=\"exampleFormControlInput1\">{q1 ?? \"Question 1\"}</CFormLabel>\n                    <CFormInput className=\"text-primary\"\n                        type=\"text\"\n                        id=\"exampleFormControlInput1\"\n                        value={form.q1}\n                        // onChange={(e)=>{setForm(e.target.value)}}\n                        onChange={(e)=>setForm((x)=>({...x,q1:e.target.value}))}\n                        size=\"sm\"\n                    />\n                    </CCol>\n                </CRow>\n                <CRow>\n                    <CCol>\n                    <CFormLabel htmlFor=\"exampleFormControlInput1\">{q2 ?? \"Question 2\"}</CFormLabel>\n                    <CFormInput className=\"text-primary\"\n                        type=\"text\"\n                        id=\"exampleFormControlInput1\"\n                        value={form.q2}\n                        // onChange={(e)=>{setForm(e.target.value)}}\n                        onChange={(e)=>setForm((x)=>({...x,q2:e.target.value}))}\n                        size=\"sm\"\n                    />\n                    </CCol>\n                </CRow>\n\n                <CRow>\n                    <CCol>\n                    <CFormLabel htmlFor=\"exampleFormControlInput1\">{q3 ?? \"Question 3\"}</CFormLabel>\n                    <CFormInput\n                        type=\"text\" className=\"text-primary\"\n                        id=\"exampleFormControlInput1\"\n                        value={form.q3}\n                        // onChange={(e)=>{setForm(e.target.value)}}\n                        onChange={(e)=>setForm((x)=>({...x,q3:e.target.value}))}\n                        size=\"sm\"\n                    />\n                    </CCol>\n                </CRow>\n\n                <CRow>\n                    <CCol>\n                    <CFormLabel htmlFor=\"exampleFormControlInput1\">{q4 ?? \"Question 4\"}</CFormLabel>\n                    <CFormInput\n                        type=\"text\"\n                        className=\"text-primary\"\n                        id=\"exampleFormControlInput1\"\n                        value={form.q4}\n                        // onChange={(e)=>{setForm(e.target.value)}}\n                        onChange={(e)=>setForm((x)=>({...x,q4:e.target.value}))}\n                        size=\"sm\"\n                    />\n                    </CCol>\n                </CRow>\n\n                \n\n                <CRow>\n                    <CCol>\n                    \n                    <CFormCheck checked={form.acceptsms} className=\"text-primary\" \n                    onChange={(e)=>setForm((x)=>({...x,acceptsms:e.target.checked}))}\n                    // onChange={(e)=>{e.target.checked}}\n                    />\n                    <CFormLabel  htmlFor=\"exampleFormControlInput1\">{q5 ?? \"Question 5\"}</CFormLabel>\n                    </CCol>\n                </CRow>\n                <CRow>\n                    <CCol>\n                    <CFormCheck checked={form.acceptemail} className=\"text-primary\" \n                    onChange={(e)=>setForm((x)=>({...x,acceptemail:e.target.checked}))}\n                    />\n                    <CFormLabel htmlFor=\"exampleFormControlInput1\">{q6 ?? \"Question 6\"}</CFormLabel>\n                    </CCol>\n                </CRow>\n                <CRow>\n                    <CCol md={4}>\n                     \n                    </CCol>\n                    <CCol md={4}>\n                    <CButton color='danger' size='sm'>Reset</CButton>\n                    &nbsp; &nbsp;\n                    <CButton color='primary' onClick={()=>{instance()}} size='sm'>{!uniqId ? \"Save\":\"Update\"}</CButton> \n                    </CCol>\n                    <CCol md={4}>\n                    </CCol>\n                </CRow>\n              </CForm>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      \n    </CRow>\n  )\n}\n\nexport default formS"],"names":["useState","uniqId","setUniqId","questionData","setQuestionData","q1","setQ1","q2","setQ2","q3","setQ3","q4","setQ4","q5","setQ5","q6","setQ6","fullname","phone","email","address","accuracy","altitude","altitudeAccuracy","heading","latitude","longitude","acceptsms","acceptemail","form","setForm","useEffect","serveyQuestionList","spiltway","a","queryString","window","location","urlval","pathname","str","slice","id","replace","repl","parseInt","isNaN","apiService","data","i","push","alter","queData","x","filter","item","place","question","modifyDate","createDate","softdeleteDate","createUser","modifyUser","softdeleteUser","isdelete","alterForm","status","alert","createForm","navigator","geolocation","watchPosition","coords","positionv","console","log","xs","className","htmlFor","type","value","onChange","e","target","size","rows","checked","md","color","onClick"],"sourceRoot":""}